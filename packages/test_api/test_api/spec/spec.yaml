openapi: 3.0.0
info:
  title: Wazuh Testing API
  description: 'API to help us automate integration tests involving several machines. ONLY for testing purposes. Using it under production environments is not allowed.'
  version: 1.0.0

paths:
  /state:
    get:
      summary: Get the current state of the service
      operationId: test_api.controllers.states.get_state
      responses:
        200:
          description: Current state of the service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'

  /subscriber:
    post:
      summary: Register a subscriber to receive any state changes
      operationId: test_api.controllers.states.add_subscriber
      requestBody:
        description: Data to connect to the receiver API
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber'
        required: true
      callbacks:
        state_change_received:
          '{$request.body#/url}':
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/StateEvent'
              responses:
                '200':
                  description: new state acknowledged
                '400':
                  description: error receiving new state
      responses:
        200:
          description: subscriber added successfully

  /state-event:
    post:
      summary: Callback implementation to receive new state
      operationId: test_api.controllers.states.register_state
      requestBody:
        description: Process a new state in any of the subscribed services
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateEvent'
      responses:
        200:
          description: Event processed successfully

  /execute:
    post:
      summary: Execute custom Python code in the server
      operationId: test_api.controllers.executor.execute_code
      requestBody:
        description: Python script
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PythonScript'
      responses:
        200:
          description: Script executed successfully
        400:
          description: Error in the body request
        500:
          description: Error executing the script

components:
  schemas:
    State:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
    Subscriber:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          format: uri
          example: http://myserver:56000/event
    StateEvent:
      allOf:
        - $ref: '#/components/schemas/State'
        - type: object
          properties:
            origin:
              type: string
    PythonScript:
      type: object
      properties:
        lines:
          type: array
          items:
            type: string


