# Copyright (C) 2015-2019, Wazuh Inc.
# Created by Wazuh, Inc. <info@wazuh.com>.
# This program is free software; you can redistribute it and/or modify it under the terms of GPLv2

import json
import os
import re

from jq import jq
from jsonschema import validate

_data_path = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'data')


def validate_mitre_event(event):
    """ Checks if a Mitre event is properly formatted.

    :param event: dict representing an event generated by rule enhanced by MITRE

    :return: None
    """
    with open(os.path.join(_data_path, 'mitre_event.json'), 'r') as f:
        schema = json.load(f)
    validate(schema=schema, instance=event)

def callback_detect_mitre_event(line):
    """ Callback to detect Mitre event

    :param line: string to be compared with alerts in ossec.log
    :return: JSON object on success or None on fail
    """
    match = re.match(r'.*Sending mitre event: (.+)$', line)
    if match:
        return json.loads(match.group(1))
    return None

def callback_detect_analysisd_started(line):
    match = re.match(r'.*ossec-analysisd\[\d+\].*Started', line)
    if match:
        return line
    return None

def detect_initial_analysisd(file_monitor):
    """ Detect analysisd start when restarting Wazuh

    :param file_monitor: Wazuh log monitor to detect syscheck events
    :type file_monitor: FileMonitor
    :return: None
    """
    file_monitor.start(timeout=6, callback=callback_detect_analysisd_started)