-
  name: Insert commands
  description: Check success use cases for insert commands on global DB
  test_case:
    -
      input: global delete-group TestGroup1
      output: ok
      stage: global delete-group previous insert
    -
      input: global find-group TestGroup1
      output: ok []
      stage: global find-group previous insert
    -
      input: global insert-agent-group TestGroup1
      output: ok
      stage: global insert-agent-group success
    -
      input: global find-group default
      output: ok [{"id":*}]
      stage: global find-group after insert
      use_regex: "yes"
    -
      input: global find-group TestGroup1
      output: ok [{"id":*}]
      stage: global find-group after insert
      use_regex: "yes"
    -
      input: global select-groups
      output: ok [{"name":"default"},{"name":"TestGroup1"}]
      stage: global select-groups success
    -
      input: global delete-agent 1
      output: ok
      stage: global delete-agent previous insert
    -
      input: global get-agent-info 1
      output: ok []
      stage: global get-agent-info previous insert
    -
      input:
        global insert-agent {"id":1,"name":"TestName1","ip":"0.0.0.1","register_ip":"0.0.0.1",
        "internal_key":"TopSecret","group":"TestGroup1","date_add":1599223378}
      output: ok
      stage: global insert-agent success
    -
      input: global get-agent-info 1
      output: ok [{"id":1,"name":"TestName1","ip":"0.0.0.1","register_ip":"0.0.0.1","internal_key":"TopSecret","node_name":"unknown","date_add":1599223378,"group":"TestGroup1","group_sync_status":"synced","sync_status":"synced","connection_status":"never_connected","disconnection_time":0,"group_config_status":"not synced","status_code":0}]
      stage: global get-agent-info after insert
    -
      input: global find-agent {"name":"TestName1","ip":"0.0.0.1"}
      output: ok [{"id":1}]
      stage: global find-agent success
    -
      input: global delete-agent 2
      output: ok
      stage: global delete-agent previous insert
    -
      input: global insert-agent {"id":2,"name":"TestName2","date_add":1599223378}
      output: ok
      stage: global insert-agent minimal fields success
    -
      input: global get-agent-info 2
      output: ok [{"id":2,"name":"TestName2","node_name":"unknown","date_add":1599223378,"group_sync_status":"synced","sync_status":"synced","connection_status":"never_connected","disconnection_time":0,"group_config_status":"not synced","status_code":0}]
      stage: global get-agent-info after minimal fields insert
    -
      input: global delete-agent 2
      output: ok
      stage: global delete-agent after insert
    -
      input: global insert-agent {"id":2,"name":"TestName2","date_add":1599223378}
      output: ok
      stage: global insert-agent agent 2 again after delete
-
  name: Update commands
  description: Check success use cases for update commands on global DB
  test_case:
    -
      input: global update-agent-name {"id":1,"name":"TestName2"}
      output: ok
      stage: global update-agent-name success
    -
      input: global update-agent-data {"id":1,"os_name":"TestOsName","os_version":"TestOsVersion","os_major":"TestOsMajor","os_minor":"TestOsMinor","os_codename":"TestOsCodeName","os_platform":"TestOsPlatfor","os_build":"TestOsBuild","os_uname":"TestOsUname","os_arch":"TestOsArch","version":"TestVersion","config_sum":"TestConfigSum","merged_sum":"TestMergedSum","manager_host":"TestManagerHost","node_name":"TestNodeName","agent_ip":"0.0.0.1","sync_status":"syncreq","group_config_status":"not synced","connection_status":"never_connected","labels":"TestKey1:TestLabel1"}
      output: ok
      stage: global update-agent-data success
    -
      input: global update-connection-status {"id":1,"connection_status":"pending","sync_status":"syncreq","status_code":1}
      output: ok
      stage: global update-connection-status pending success
    -
      input: global get-agent-info 1
      output: ok [{"id":1,"name":"TestName2","ip":"0.0.0.1","register_ip":"0.0.0.1","internal_key":"TopSecret","os_name":"TestOsName","os_version":"TestOsVersion","os_major":"TestOsMajor","os_minor":"TestOsMinor","os_codename":"TestOsCodeName","os_build":"TestOsBuild","os_platform":"TestOsPlatfor","os_uname":"TestOsUname","os_arch":"TestOsArch","version":"TestVersion","config_sum":"TestConfigSum","merged_sum":"TestMergedSum","manager_host":"TestManagerHost","node_name":"TestNodeName","date_add":1599223378,"last_keepalive":*,"group":"TestGroup1","group_sync_status":"synced","sync_status":"syncreq","connection_status":"pending","disconnection_time":0,"group_config_status":"not synced","status_code":1}]
      stage: global get-agent-info success after updates
      use_regex: "yes"
    -
      input: global update-connection-status {"id":1,"connection_status":"active","sync_status":"synced","status_code":0}
      output: ok
      stage: global update-connection-status active success
    -
      input: global get-agent-info 1
      output: ok [{"id":1,"name":"TestName2","ip":"0.0.0.1","register_ip":"0.0.0.1","internal_key":"TopSecret","os_name":"TestOsName","os_version":"TestOsVersion","os_major":"TestOsMajor","os_minor":"TestOsMinor","os_codename":"TestOsCodeName","os_build":"TestOsBuild","os_platform":"TestOsPlatfor","os_uname":"TestOsUname","os_arch":"TestOsArch","version":"TestVersion","config_sum":"TestConfigSum","merged_sum":"TestMergedSum","manager_host":"TestManagerHost","node_name":"TestNodeName","date_add":1599223378,"last_keepalive":*,"group":"TestGroup1","group_sync_status":"synced","sync_status":"synced","connection_status":"active","disconnection_time":0,"group_config_status":"not synced","status_code":0}]
      stage: global get-agent-info success after updates
      use_regex: "yes"
    -
      input: global update-connection-status {"id":1,"connection_status":"disconnected","sync_status":"syncreq","status_code":1}
      output: ok
      stage: global update-connection-status disconnected success
    -
      input: global get-agent-info 1
      output: ok [{"id":1,"name":"TestName2","ip":"0.0.0.1","register_ip":"0.0.0.1","internal_key":"TopSecret","os_name":"TestOsName","os_version":"TestOsVersion","os_major":"TestOsMajor","os_minor":"TestOsMinor","os_codename":"TestOsCodeName","os_build":"TestOsBuild","os_platform":"TestOsPlatfor","os_uname":"TestOsUname","os_arch":"TestOsArch","version":"TestVersion","config_sum":"TestConfigSum","merged_sum":"TestMergedSum","manager_host":"TestManagerHost","node_name":"TestNodeName","date_add":1599223378,"last_keepalive":*,"group":"TestGroup1","group_sync_status":"synced","sync_status":"syncreq","connection_status":"disconnected","disconnection_time":*,"group_config_status":"not synced","status_code":1}]
      stage: global get-agent-info success after updates
      use_regex: "yes"
    -
      input: global update-connection-status {"id":1,"connection_status":"dummy_status","sync_status":"synced","status_code":0}
      output: "err Cannot execute Global database query; CHECK constraint failed: connection_status IN ('pending', 'never_connected', 'active', 'disconnected')"
      stage: global update-connection-status dummy_status error
    -
      input: global get-agent-info 1
      output: ok [{"id":1,"name":"TestName2","ip":"0.0.0.1","register_ip":"0.0.0.1","internal_key":"TopSecret","os_name":"TestOsName","os_version":"TestOsVersion","os_major":"TestOsMajor","os_minor":"TestOsMinor","os_codename":"TestOsCodeName","os_build":"TestOsBuild","os_platform":"TestOsPlatfor","os_uname":"TestOsUname","os_arch":"TestOsArch","version":"TestVersion","config_sum":"TestConfigSum","merged_sum":"TestMergedSum","manager_host":"TestManagerHost","node_name":"TestNodeName","date_add":1599223378,"last_keepalive":*,"group":"TestGroup1","group_sync_status":"synced","sync_status":"syncreq","connection_status":"disconnected","disconnection_time":*}]
      stage: global get-agent-info success after updates
      use_regex: "yes"
    -
      input: global update-keepalive {"id":1,"sync_status":"syncreq","connection_status":"active"}
      output: ok
      stage: global update-keepalive success
    -
      input: global get-agent-info 1
      output: ok [{"id":1,"name":"TestName2","ip":"0.0.0.1","register_ip":"0.0.0.1","internal_key":"TopSecret","os_name":"TestOsName","os_version":"TestOsVersion","os_major":"TestOsMajor","os_minor":"TestOsMinor","os_codename":"TestOsCodeName","os_build":"TestOsBuild","os_platform":"TestOsPlatfor","os_uname":"TestOsUname","os_arch":"TestOsArch","version":"TestVersion","config_sum":"TestConfigSum","merged_sum":"TestMergedSum","manager_host":"TestManagerHost","node_name":"TestNodeName","date_add":1599223378,"last_keepalive":*,"group":"TestGroup1","group_sync_status":"synced","sync_status":"syncreq","connection_status":"active","disconnection_time":0,"group_config_status":"not synced","status_code":0}]
      stage: global get-agent-info success after updates
      use_regex: "yes"
-
  name: Labels commands
  description: Check success use cases for labels table commands on global DB
  test_case:
    -
      input: global get-labels 1
      output: ok [{"id":1,"key":"TestKey1","value":"TestLabel1"}]
      stage: global get-labels success
-
  name: Select commands
  description: Check success use cases for select commands on global DB
  test_case:
    -
      input: global select-agent-name 1
      output: ok [{"name":"TestName2"}]
      stage: global select-agent-name success
    -
      input: global select-agent-group  1
      output: ok [{"group":"TestGroup1"}]
      stage: global select-agent-group success
    -
      input: global select-groups
      output: ok [{"name":"default"},{"name":"TestGroup1"}]
      stage: global select-groups success
-
  name: get-all-agents command
  description: Check success use cases for get-all-agents command on global DB. Chunks command
  test_case:
    -
      input: global get-all-agents last_id -1
      output: ok [{"id":0},{"id":1},{"id":2}]
      stage: global get-all-agents success
-
  name: sync-agent-info-get command
  description: Check success use cases for sync-agent-info-get command on global DB. Chunks command
  test_case:
    -
      input: global sync-agent-info-get last_id 0
      output: ok []
      stage: global sync-agent-info-get success
      use_regex: 'yes'
    -
      input: global sync-agent-info-get last_id 0
      output: ok []
      stage: global sync-agent-info-get after first get success
    -
      input: global update-keepalive {"id":1,"sync_status":"syncreq","connection_status":"active"}
      output: ok
      stage: global update-keepalive success
-
  name: sync-agent-info-set command
  description: Check success use cases for sync-agent-info-get command on global DB.
  test_case:
    -
      input:
        global sync-agent-info-set [{"id":3,"name":"TestName3","ip":"0.0.0.3","os_name":"TestOsName",
        "os_version":"TestOsVersion","os_major":"TestOsMajor","os_minor":"TestOsMinor","os_codename":"TestOsCodeName",
        "os_build":"TestOsBuild","os_platform":"TestOsPlatfor","os_uname":"TestOsUname","os_arch":"TestOsArch",
        "config_sum":"TestConfigSum","merged_sum":"TestMergedSum","manager_host":"TestManagerHost",
        "node_name":"TestNodeName","last_keepalive":200,"group_config_status":"not synced","status_code":0}]
      output: ok
      stage: global sync-agent-info-set non-existent agent
    -
      input: global get-agent-info 3
      output: ok []
      stage: global get-agent-info success after non-existent sync-agent-info-set
    -
      input: global delete-agent 3
      output: ok
      stage: global delete-agent previous insert
    -
      input:
        global insert-agent {"id":3,"name":"TestName3","ip":"0.0.0.3","register_ip":"0.0.0.3",
        "internal_key":"TopSecret","date_add":1599223378}
      output: ok
      stage: global insert-agent success
    -
      input:
        global sync-agent-info-set [{"id":3,"name":"TestName3","ip":"0.0.0.3","os_name":"TestOsName",
        "os_version":"TestOsVersion","os_major":"TestOsMajor","os_minor":"TestOsMinor",
        "os_codename":"TestOsCodeName","os_build":"TestOsBuild","os_platform":"TestOsPlatfor",
        "os_uname":"TestOsUname","os_arch":"TestOsArch","config_sum":"TestConfigSum","merged_sum":"TestMergedSum",
        "manager_host":"TestManagerHost","node_name":"TestNodeName","last_keepalive":200,
        "connection_status":"never_connected","disconnection_time":0, "group_config_status":"not synced",
        "status_code":0}]
      output: ok
      stage: global sync-agent-info-set success
    -
      input: global get-agent-info 3
      output: ok [{"id":3,"name":"TestName3","ip":"0.0.0.3","register_ip":"0.0.0.3","internal_key":"TopSecret","os_name":"TestOsName","os_version":"TestOsVersion","os_major":"TestOsMajor","os_minor":"TestOsMinor","os_codename":"TestOsCodeName","os_build":"TestOsBuild","os_platform":"TestOsPlatfor","os_uname":"TestOsUname","os_arch":"TestOsArch","config_sum":"TestConfigSum","merged_sum":"TestMergedSum","manager_host":"TestManagerHost","node_name":"TestNodeName","date_add":1599223378,"last_keepalive":200,"group_sync_status":"synced","sync_status":"synced","connection_status":"never_connected","disconnection_time":0,"group_config_status":"not synced","status_code":0}]
      stage: global get-agent-info success after sync-agent-info-set success
-
  name: Reset connection status
  description: Check success use cases for reset connection status command.
  test_case:
    -
      input: global update-connection-status {"id":1,"connection_status":"pending","sync_status":"synced","status_code":1}
      output: ok
      stage: global update-connection-status pending success
    -
      input: global update-connection-status {"id":3,"connection_status":"active","sync_status":"synced","status_code":0}
      output: ok
      stage: global update-connection-status active success
    -
      input: global sql SELECT id,sync_status FROM agent
      output: ok [{"id":0,"sync_status":"synced"},{"id":1,"sync_status":"synced"},{"id":2,"sync_status":"synced"},{"id":3,"sync_status":"synced"}]
      stage: global checking sync_status before reset-agents-connection
    -
      input: global reset-agents-connection syncreq
      output: ok
      stage: global reset-agents-connection success
    -
      input: global sql SELECT id,sync_status FROM agent
      output: ok [{"id":0,"sync_status":"synced"},{"id":1,"sync_status":"syncreq"},{"id":2,"sync_status":"synced"},{"id":3,"sync_status":"syncreq"}]
      stage: global checking sync_status after reset-agents-connection
    -
      input: global get-agent-info 0
      output: ok [{"id":0,*,"last_keepalive":253402300799,"group_sync_status":"synced","sync_status":"synced","connection_status":"active","disconnection_time":0,"group_config_status":"synced","status_code":0}]
      stage: global manager get-agent-info success post reset connection status
      use_regex: "yes"
    -
      input: global get-agent-info 1
      output: ok [{"id":1,"name":"TestName2","ip":"0.0.0.1","register_ip":"0.0.0.1","internal_key":"TopSecret","os_name":"TestOsName","os_version":"TestOsVersion","os_major":"TestOsMajor","os_minor":"TestOsMinor","os_codename":"TestOsCodeName","os_build":"TestOsBuild","os_platform":"TestOsPlatfor","os_uname":"TestOsUname","os_arch":"TestOsArch","version":"TestVersion","config_sum":"TestConfigSum","merged_sum":"TestMergedSum","manager_host":"TestManagerHost","node_name":"TestNodeName","date_add":1599223378,"last_keepalive":*,"group":"TestGroup1","group_sync_status":"synced","sync_status":"syncreq","connection_status":"disconnected","disconnection_time":*,"group_config_status":"not synced","status_code":5}]
      stage: global agent get-agent-info success post reset connection status
      use_regex: "yes"
    -
      input: global get-agent-info 2
      output: ok [{"id":2,"name":"TestName2","node_name":"unknown","date_add":1599223378,"group_sync_status":"synced","sync_status":"synced","connection_status":"never_connected","disconnection_time":0,"group_config_status":"not synced","status_code":0}]
      stage: global agent get-agent-info success post reset connection status
      use_regex: "yes"
    -
      input: global get-agent-info 3
      output: ok [{"id":3,"name":"TestName3","ip":"0.0.0.3","register_ip":"0.0.0.3","internal_key":"TopSecret","os_name":"TestOsName","os_version":"TestOsVersion","os_major":"TestOsMajor","os_minor":"TestOsMinor","os_codename":"TestOsCodeName","os_build":"TestOsBuild","os_platform":"TestOsPlatfor","os_uname":"TestOsUname","os_arch":"TestOsArch","config_sum":"TestConfigSum","merged_sum":"TestMergedSum","manager_host":"TestManagerHost","node_name":"TestNodeName","date_add":1599223378,"last_keepalive":*,"group_sync_status":"synced","sync_status":"syncreq","connection_status":"disconnected","disconnection_time":*,"group_config_status":"not synced","status_code":5}]
      stage: global agent get-agent-info success post reset connection status
      use_regex: "yes"
-
  name: get-agents-by-connection-status command
  description: Check success use cases for get-agents-by-connection-status command on global DB.
  test_case:
    -
      input: global update-connection-status {"id":1,"connection_status":"never_connected","sync_status":"syncreq","status_code":1}
      output: ok
      stage: global update-connection-status never_connected
    -
      input: global update-connection-status {"id":2,"connection_status":"pending","sync_status":"syncreq","status_code":1}
      output: ok
      stage: global update-connection-status pending
    -
      input: global update-connection-status {"id":3,"connection_status":"active","sync_status":"syncreq","status_code":0}
      output: ok
      stage: global update-connection-status active
    -
      input: global get-agents-by-connection-status 0 never_connected
      output: ok [{"id":1}]
      stage: global get-agents-by-connection-status never_connected success
    -
      input: global get-agents-by-connection-status 0 pending
      output: ok [{"id":2}]
      stage: global get-agents-by-connection-status pending success
    -
      input: global get-agents-by-connection-status 0 active
      output: ok [{"id":3}]
      stage: global get-agents-by-connection-status active success
    -
      input: global sql SELECT id,sync_status FROM agent
      output: ok [{"id":0,"sync_status":"synced"},{"id":1,"sync_status":"syncreq"},{"id":2,"sync_status":"syncreq"},{"id":3,"sync_status":"syncreq"}]
      stage: global checking sync_status before reset-agents-connection
    -
      input: global reset-agents-connection synced
      output: ok
      stage: global reset-agents-connection
    -
      input: global sql SELECT id,sync_status FROM agent
      output: ok [{"id":0,"sync_status":"synced"},{"id":1,"sync_status":"syncreq"},{"id":2,"sync_status":"synced"},{"id":3,"sync_status":"synced"}]
      stage: global checking sync_status after reset-agents-connection
    -
      input: global get-agents-by-connection-status 0 disconnected
      output: ok [{"id":2},{"id":3}]
      stage: global get-agents-by-connection-status disconnected success
-
  name: disconnect-agents command
  description: Check the right behavior of disconnect-agents command on global DB.
  test_case:
    -
      input: global sql UPDATE agent SET last_keepalive = 100 WHERE id = 1;
      output: ok []
      stage: global updating agent's 1 keepalive to 100
    -
      input: global update-connection-status {"id":1,"connection_status":"active","sync_status":"syncreq","status_code":0}
      output: ok
      stage: global update-connection-status as active for agent 1 success
    -
      input: global sql UPDATE agent SET last_keepalive = 150 WHERE id = 2;
      output: ok []
      stage: global updating agent's 2 keepalive to 150
    -
      input: global update-connection-status {"id":2,"connection_status":"pending","sync_status":"syncreq","status_code":1}
      output: ok
      stage: global update-connection-status as pending for agent 2 success
    -
      input: global sql UPDATE agent SET last_keepalive = 200 WHERE id = 3;
      output: ok []
      stage: global updating agent's 3 keepalive to 200
    -
      input: global update-connection-status {"id":3,"connection_status":"active","sync_status":"syncreq","status_code":0}
      output: ok
      stage: global update-connection-status as active for agent 3 success
    -
      input: global get-agents-by-connection-status 0 disconnected
      output: ok []
      stage: global get-agents-by-connection-status disconnected before disconnecting agents success
    -
      input: global sql UPDATE agent SET sync_status = "synced" WHERE id =1
      output: ok []
      stage: global setting sync_status before disconnecting-agents command
    -
      input: global disconnect-agents 0 175 syncreq
      output: ok [{"id":1},{"id":2}]
      stage: global disconnect-agents success
    -
      input: global sql SELECT id,sync_status FROM agent WHERE id =1
      output: ok [{"id":1,"sync_status":"syncreq"}]
      stage: global testing sync_status after disconnecting-agents command
    -
      input: global get-agents-by-connection-status 0 disconnected
      output: ok [{"id":1},{"id":2}]
      stage: global get-agents-by-connection-status disconnected after disconnecting agents success
-
  name: Delete commands
  description: Check success use cases for delete commands on global DB.
  test_case:
    -
      input: global delete-group TestGroup1
      output: ok
      stage: global delete-group after insert
    -
      input: global delete-agent 1
      output: ok
      stage: global delete-agent after insert
    -
      input: global delete-agent 2
      output: ok
      stage: global delete-agent after insert
    -
      input: global delete-agent 3
      output: ok
      stage: global delete-agent after insert
-
  name: Manager keepalive
  description: Check success use cases for manager keepalive.
  test_case:
    -
      input: global get-agent-info 0
      output: ok [{"id":0,*,"last_keepalive":253402300799,"group_sync_status":"synced","sync_status":"synced","connection_status":"active","disconnection_time":0,"group_config_status":"synced","status_code":0}]
      stage: global manager get-agent-info success pre update
      use_regex: "yes"
    -
      input:
        global update-agent-data {"id":0,"os_name":"TestOsName","os_version":"TestOsVersion","os_major":"TestOsMajor",
        "os_minor":"TestOsMinor","os_codename":"TestOsCodeName","os_platform":"TestOsPlatfor","os_build":"TestOsBuild",
        "os_uname":"TestOsUname","os_arch":"TestOsArch","version":"TestVersion","group_config_status":"not synced",
        "config_sum":"TestConfigSum","merged_sum":"TestMergedSum","manager_host":"TestManagerHost",
        "node_name":"TestNodeName","agent_ip":"127.0.0.1","sync_status":"synced","connection_status":"active",
        "disconnection_time":0,"status_code":0}
      output: ok
      stage: global manager update-agent-data success
    -
      input: global get-agent-info 0
      output: ok [{"id":0,*,"last_keepalive":253402300799,"group_sync_status":"synced","sync_status":"synced","connection_status":"active","disconnection_time":0,"group_config_status":"not synced","status_code":0}]
      stage: global manager get-agent-info success post update with IP
      use_regex: "yes"
    -
      input:
        global update-agent-data {"id":0,"os_name":"TestOsName","os_version":"TestOsVersion","os_major":"TestOsMajor",
        "os_minor":"TestOsMinor","os_codename":"TestOsCodeName","os_platform":"TestOsPlatfor",
        "os_build":"TestOsBuild","os_uname":"TestOsUname","os_arch":"TestOsArch","version":"TestVersion",
        "config_sum":"TestConfigSum","merged_sum":"TestMergedSum","manager_host":"TestManagerHost",
        "node_name":"TestNodeName","sync_status":"synced","connection_status":"active","group_config_status":"synced","status_code":0}
      output: ok
      stage: global manager update-agent-data success
    -
      input: global get-agent-info 0
      output: ok [{"id":0,*,"last_keepalive":253402300799,"group_sync_status":"synced","sync_status":"synced","connection_status":"active","disconnection_time":0,"group_config_status":"synced","status_code":0}]
      stage: global manager get-agent-info success post update without IP
      use_regex: "yes"
