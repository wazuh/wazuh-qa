---
  -
    name: 'Agent name same as Manager'
    description: 'Check for register an agent with name same as manager: rejected'
    test_case:
    -
      input: "OSSEC A:'{}'"
      output: 'ERROR: Invalid agent name: {}'
      insert_hostname_in_query: 'yes'
  -
    name: 'Register with Default config'
    description: 'Default manager configuration: registered'
    test_case:
    -
      input: "OSSEC A:'user1'"
      output: "OSSEC K:'001 user1 any "
  -
    name: 'Too short agent name'
    description: 'Agent name too short < 2: rejected'
    test_case:
    -
      input: "OSSEC A:'n'"
      output: 'ERROR: Invalid agent name: '
  -
    name: 'Min len agent name'
    description: 'Agent name length = 2: registered'
    test_case:
    -
      input: "OSSEC A:'nn'"
      output: "OSSEC K:'001 nn any "
  -
    name: 'Max len agent name'
    description: 'Agent name length = 128: registered'
    test_case:
    -
      input: "OSSEC A:'userxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'"
      output: "OSSEC K:'001 userxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx any"
  -
    name: 'Too long agent name'
    description: 'Agent name length = 129: rejected'
    test_case:
    -
      input: "OSSEC A:'userxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'"
      output: 'ERROR: Invalid agent name: '
  -
    name: "Check non-alphanumeric '*'"
    description: "Agent name with '*': rejected"
    test_case:
    -
      input: "OSSEC A:'user*1'"
      output: 'ERROR: Invalid agent name: '
  -
    name: "Check non-alphanumeric '-'"
    description: "Agent name with '-': registered"
    test_case:
    -
      input: "OSSEC A:'user-1'"
      output: "OSSEC K:'001 user-1 any "
  -
    name: "Check non-alphanumeric '_'"
    description: "Agent name with '_': registered"
    test_case:
    -
      input: "OSSEC A:'user_1'"
      output: "OSSEC K:'001 user_1 any "
  -
    name: "Check non-alphanumeric '.'"
    description: "Agent name with '.': registered"
    test_case:
    -
      input: "OSSEC A:'user.1'"
      output: "OSSEC K:'001 user.1 any "
  -
    name: 'Valid IP'
    description: 'Try register an agent with valid IP: register'
    test_case:
    -
      input: "OSSEC A:'user1' IP:'10.10.10.10'"
      output: "OSSEC K:'001 user1 10.10.10.10 "
  -
    name: 'Invalid IP: incomplete'
    description: 'Try register an agent with invalid IP: rejected'
    test_case:
    -
      input: "OSSEC A:'user1' IP:'10.10.10'"
      output: 'ERROR: Invalid IP: '
  -
    name: 'Invalid IP: alphabetic character'
    description: 'Try register an agent with invalid IP: rejected'
    test_case:
    -
      input: "OSSEC A:'user1' IP:'10.10.10.nn'"
      output: 'ERROR: Invalid IP: '
  -
    name: 'Invalid IP: greater than 255: 1'
    description: 'Try register an agent with invalid IP'
    # The manager should validate the IP https://github.com/wazuh/wazuh/issues/4965
    test_case:
    -
      input: "OSSEC A:'user1' IP:'10.10.10.257'"
      output: 'ERROR: Invalid IP: '
      expected_fail: 'yes'
  -
    name: 'Invalid IP: greater than 255: 2'
    description: 'Try register an agent with invalid IP'
    # The manager should validate the IP https://github.com/wazuh/wazuh/issues/4965
    test_case:
    -
      input: "OSSEC A:'user1' IP:'257.257.257.257'"
      output: 'ERROR: Invalid IP: '
      expected_fail: 'yes'
  -
    name: 'Invalid IP: 4 digits'
    description: 'Try register an agent with invalid IP: rejected'
    test_case:
    -
      input: "OSSEC A:'user1' IP:'999.9999.999.999'"
      output: 'ERROR: Invalid IP: '
  -
    name: 'Ip with mask/0'
    description: 'Ip with mask'
    test_case:
    -
      input: "OSSEC A:'user1' IP:'10.10.10.10/0'"
      output: "OSSEC K:'001 user1 10.10.10.10/0 "
  -
    name: 'Ip with mask /24 '
    description: 'Ip with mask /24 '
    test_case:
    -
      input: "OSSEC A:'user1' IP:'10.10.10.1/24'"
      output: "OSSEC K:'001 user1 10.10.10.1/24 "
  -
    name: 'Ip with mask /32'
    description: 'Ip with mask /32'
    test_case:
    -
      input: "OSSEC A:'user1' IP:'10.10.10.1/32'"
      output: "OSSEC K:'001 user1 10.10.10.1/32"
  -
    name: 'Invalid mask'
    description: 'Invalid mask'
    test_case:
    -
      input: "OSSEC A:'user1' IP:'10.10.10.1/55'"
      output: 'ERROR: Invalid IP: 10.10.10.1'
  -
    name: 'Invalid mask, wrong character'
    description: 'Invalid mask, wrong character'
    test_case:
    -
      input: "OSSEC A:'user1' IP:'10.10.10.1/2{'"
      output: 'ERROR: Invalid IP: 10.10.10.1'
  -
    name: 'Invalid mask, wrong character'
    description: 'Invalid mask, wrong character'
    test_case:
    -
      input: "OSSEC A:'user1' IP:'10.10.10.1/<'"
      output: 'ERROR: Invalid IP: 10.10.10.1'
