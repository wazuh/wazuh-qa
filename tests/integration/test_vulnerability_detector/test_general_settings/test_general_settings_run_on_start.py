'''
brief: The tests will modify the value of `run_on_start` tag in `ossec.conf` and check the result in `ossec.log`.

copyright:
    Copyright (C) 2015-2021, Wazuh Inc.

    Created by Wazuh, Inc. <info@wazuh.com>.

    This program is free software; you can redistribute it and/or modify it under the terms of GPLv2

metadata:
    modules:
        - Vulnerability detector
    daemons:
        - wazuh-modulesd
    operating_system:
        - RedHat
        - Ubuntu
        - Debian
        - Windows
    wazuh_max_version: 4.0.0
    wazuh_min_version: 4.1.5
    tiers:
        - 0
''' 

import os

import pytest
import wazuh_testing.vulnerability_detector as vd
from wazuh_testing.tools import LOG_FILE_PATH
from wazuh_testing.tools.configuration import load_wazuh_configurations, check_apply_test
from wazuh_testing.tools.monitoring import FileMonitor
from wazuh_testing.vulnerability_detector import make_vuln_callback, VULN_DETECTOR_GLOBAL_TIMEOUT

# Marks
pytestmark = pytest.mark.tier(level=0)

# Variables
current_test_path = os.path.dirname(os.path.realpath(__file__))
test_data_path = os.path.join(current_test_path, 'data')
test_feeds_path = os.path.join(current_test_path, '..', 'data')
configurations_path = os.path.join(test_data_path, 'wazuh_run_on_start.yaml')
custom_nvd_feed_path = os.path.join(test_data_path, 'feeds', vd.CUSTOM_NVD_FEED)

wazuh_log_monitor = FileMonitor(LOG_FILE_PATH)
scan_timeout = 60

config_wildcards_values = [{'RUN_ON_START': 'yes', 'NVD_JSON_PATH': custom_nvd_feed_path},
                           {'RUN_ON_START': 'no', 'NVD_JSON_PATH': custom_nvd_feed_path}]
config_wildcards_metadata = [{'run_on_start': 'yes'}, {'run_on_start': 'no'}]

# Configuration data
configurations = load_wazuh_configurations(configurations_path, __name__,
                                           params=config_wildcards_values,
                                           metadata=config_wildcards_metadata)

# Callbacks
callback_detect_vulnerability_scan_started = make_vuln_callback('Starting vulnerability scan')
callback_detect_vulnerability_scan_finished = make_vuln_callback('Vulnerability scan finished')


# Fixtures
@pytest.fixture(scope='module', params=configurations, ids=["run_on_start_yes", "run_on_start_no"])
def get_configuration(request):
    """Get configurations from the module."""
    return request.param


def test_run_on_start(get_configuration, configure_environment, restart_modulesd):
    """
    test_logic:
        Check if modulesd detects the vulnerability detector scan after starting.

        If we have set the parameter run_on_start to 'yes', modulesd will have to report the
        vulnerability detector scan, and in case of the value 'no', do not report anything
    checks:
        - Vulnerability scan starts after restarting `wazuh-modulesd` when `run_on_start` is set to `yes`, checking `ossec.log` message.
        - Vulnerability scan starts after restarting `wazuh-modulesd` when `run_on_start` is set to `yes`, checking `ossec.log` message.
    """

    check_apply_test({'run_on_start'}, get_configuration['tags'])

    if get_configuration['metadata']['run_on_start'] == 'yes':
        # If enable, check that vuln scan has started when the service starts
        wazuh_log_monitor.start(timeout=VULN_DETECTOR_GLOBAL_TIMEOUT,
                                callback=callback_detect_vulnerability_scan_started,
                                error_message='Could not find vulnerability starting scan log')

        # Check that the scan has finished successfully
        wazuh_log_monitor.start(timeout=scan_timeout,
                                callback=callback_detect_vulnerability_scan_finished,
                                error_message='Could not find vulnerability scan finished log')
    else:
        # If disabled, check that vuln scan has not started
        with pytest.raises(TimeoutError):
            wazuh_log_monitor.start(timeout=VULN_DETECTOR_GLOBAL_TIMEOUT,
                                    callback=callback_detect_vulnerability_scan_started)
            raise AttributeError(f'Found starting scan log when run on start is disabled')
