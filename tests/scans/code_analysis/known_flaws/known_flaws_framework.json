{
    "false_positives": [
        {
            "code": " def md5(fname):\n     hash_md5 = hashlib.md5()\n     with open(fname, \"rb\") as f:\n",
            "filename": "framework/wazuh/core/utils.py",
            "issue_confidence": "HIGH",
            "issue_severity": "MEDIUM",
            "issue_text": "Use of insecure MD2, MD4, MD5, or SHA1 hash function.",
            "line_number": 724,
            "line_range": [
                724
            ],
            "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b303-md5",
            "test_id": "B303",
            "test_name": "blacklist"
        },
        {
            "code": "         try:\n             subprocess.check_output([os_path.join(common.WAZUH_PATH, \"bin\", \"verify-agent-conf\"), '-f', tmp_file_path],\n                                     stderr=subprocess.STDOUT)\n         except subprocess.CalledProcessError as e:\n",
            "filename": "framework/wazuh/core/configuration.py",
            "issue_confidence": "HIGH",
            "issue_severity": "LOW",
            "issue_text": "subprocess call - check for execution of untrusted input.",
            "line_number": 991,
            "line_range": [
                991,
                992
            ],
            "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true"
        },
        {
            "code": " import struct\n import subprocess\n import sys\n",
            "filename": "framework/scripts/wazuh_logtest.py",
            "issue_confidence": "HIGH",
            "issue_severity": "LOW",
            "issue_text": "Consider possible security implications associated with subprocess module.",
            "line_number": 14,
            "line_range": [
                14
            ],
            "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist"
        },
        {
            "code": "         try:\n             proc = subprocess.Popen([wazuh_control, \"info\"], stdout=subprocess.PIPE)\n             (stdout, stderr) = proc.communicate()\n",
            "filename": "framework/scripts/wazuh_logtest.py",
            "issue_confidence": "HIGH",
            "issue_severity": "LOW",
            "issue_text": "subprocess call - check for execution of untrusted input.",
            "line_number": 521,
            "line_range": [
                521
            ],
            "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b603_subprocess_without_shell_equals_true.html",
            "test_id": "B603",
            "test_name": "subprocess_without_shell_equals_true"
        },
        {
            "code": " import re\n import subprocess\n import sys\n",
            "filename": "framework/wazuh/core/configuration.py",
            "issue_confidence": "HIGH",
            "issue_severity": "LOW",
            "issue_text": "Consider possible security implications associated with subprocess module.",
            "line_number": 9,
            "line_range": [
                9
            ],
            "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_imports.html#b404-import-subprocess",
            "test_id": "B404",
            "test_name": "blacklist"
        },
        {
            "code": "     # end time\n     result = wdb_conn.execute(f\"agent {agent_id} sql SELECT max(date_last) FROM pm_event WHERE \"\n                               \"log = 'Ending rootcheck scan.'\")\n",
            "filename": "framework/wazuh/core/rootcheck.py",
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM",
            "issue_text": "Possible SQL injection vector through string-based query construction.",
            "line_number": 156,
            "line_range": [
                156
            ],
            "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions"
        },
        {
            "code": " def syscheck_delete_agent(agent: str, wdb_conn: WazuhDBConnection) -> None:\n     wdb_conn.execute(f\"agent {agent} sql delete from fim_entry\", delete=True)\n",
            "filename": "framework/wazuh/core/syscheck.py",
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM",
            "issue_text": "Possible SQL injection vector through string-based query construction.",
            "line_number": 48,
            "line_range": [
                48
            ],
            "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions"
        },
        {
            "code": "     # start time\n     result = wdb_conn.execute(f\"agent {agent_id} sql SELECT max(date_last) FROM pm_event \"\n                               \"WHERE log = 'Starting rootcheck scan.'\")\n",
            "filename": "framework/wazuh/core/rootcheck.py",
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM",
            "issue_text": "Possible SQL injection vector through string-based query construction.",
            "line_number": 162,
            "line_range": [
                162
            ],
            "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b608_hardcoded_sql_expressions.html",
            "test_id": "B608",
            "test_name": "hardcoded_sql_expressions"
        },
        {
            "code": "     iv = InputValidator()\n     reservated_ips = {'localhost', 'NODE_IP', '0.0.0.0', '127.0.1.1'}\n \n",
            "filename": "framework/wazuh/core/cluster/cluster.py",
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM",
            "issue_text": "Possible binding to all interfaces.",
            "line_number": 58,
            "line_range": [
                58
            ],
            "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b104_hardcoded_bind_all_interfaces.html",
            "test_id": "B104",
            "test_name": "hardcoded_bind_all_interfaces"
        },
        {
            "code": "         'port': 1516,\n         'bind_addr': '0.0.0.0',\n         'nodes': ['NODE_IP'],\n         'hidden': 'no'\n     }\n \n     try:\n         config_cluster = get_ossec_conf(section='cluster', conf_file=config_file, from_import=from_import)['cluster']\n     except WazuhException as e:\n64         if e.code == 1106:\n65             # If no cluster configuration is present in ossec.conf, return default configuration but disabling it.\n66             cluster_default_configuration['disabled'] = True\n",
            "filename": "framework/wazuh/core/cluster/utils.py",
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM",
            "issue_text": "Possible binding to all interfaces.",
            "line_number": 56,
            "line_range": [
                49,
                58
            ],
            "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b104_hardcoded_bind_all_interfaces.html",
            "test_id": "B104",
            "test_name": "hardcoded_bind_all_interfaces"
        },
        {
            "code": "         new_password = getpass(f\"New password for '{username}' (skip): \")\n         if new_password == \"\":\n             continue\n",
            "filename": "framework/scripts/rbac_control.py",
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW",
            "issue_text": "Possible hardcoded password: ''",
            "line_number": 39,
            "line_range": [
                39
            ],
            "more_info": "https://bandit.readthedocs.io/en/latest/plugins/b105_hardcoded_password_string.html",
            "test_id": "B105",
            "test_name": "hardcoded_password_string"
        }
    ],
    "to_fix": [
        {
            "code": "             exc_data = dct['__unhandled_exc__']\n             return eval(exc_data['__class__'])(*exc_data['__args__'])\n         return dct\n",
            "filename": "framework/wazuh/core/cluster/common.py",
            "issue_confidence": "HIGH",
            "issue_severity": "MEDIUM",
            "issue_text": "Use of possibly insecure function - consider using safer ast.literal_eval.",
            "line_number": 1793,
            "line_range": [
                1793
            ],
            "more_info": "https://bandit.readthedocs.io/en/latest/blacklists/blacklist_calls.html#b307-eval",
            "test_id": "B307",
            "test_name": "blacklist"
        }
    ]
}
