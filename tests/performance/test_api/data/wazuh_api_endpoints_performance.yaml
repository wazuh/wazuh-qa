test_cases:

  - endpoint: /cluster/local/info
    method: get
    parameters: {}
    body: {}

  - endpoint: /cluster/nodes
    method: get
    parameters: {}
    body: {}

  - endpoint: /cluster/healthcheck
    method: get
    parameters: {}
    body: {}

  - endpoint: /cluster/status
    method: get
    parameters: {}
    body: {}

  - endpoint: /cluster/local/config
    method: get
    parameters: {}
    body: {}

  - endpoint: /cluster/api/config
    method: get
    parameters: {}
    body: {}

  - endpoint: /cluster/configuration/validation
    method: get
    parameters: {}
    body: {}

  - endpoint: /manager/status
    method: get
    parameters: {}
    body: {}

  - endpoint: /manager/info
    method: get
    parameters: {}
    body: {}

  - endpoint: /manager/configuration
    method: get
    parameters: {}
    body: {}

  - endpoint: /manager/logs
    method: get
    parameters: {}
    body: {}

  - endpoint: /manager/api/config
    method: get
    parameters: {}
    body: {}

  - endpoint: /manager/configuration/validation
    method: get
    parameters: {}
    body: {}

  - endpoint: /mitre/groups
    method: get
    parameters: {}
    body: {}

  - endpoint: /mitre/metadata
    method: get
    parameters: {}
    body: {}

  - endpoint: /mitre/mitigations
    method: get
    parameters: {}
    body: {}

  - endpoint: /mitre/references
    method: get
    parameters: {}
    body: {}

  - endpoint: /mitre/software
    method: get
    parameters: {}
    body: {}

  - endpoint: /mitre/tactics
    method: get
    parameters: {}
    body: {}

  - endpoint: /mitre/techniques
    method: get
    parameters: {}
    body: {}

  - endpoint: /overview/agents
    method: get
    parameters: {}
    body: {}

  - endpoint: /tasks/status
    method: get
    parameters: {}
    body: {}

  - endpoint: /active-response
    method: put
    parameters: {}
    body:
      command: custom
      custom: True
    restart: False

  - endpoint: /rootcheck
    method: put
    parameters: {}
    body: {}
    restart: False

  - endpoint: /syscheck
    method: put
    parameters: {}
    body: {}
    restart: False

  - endpoint: /groups
    method: post
    parameters: {}
    body:
      group_id: "new_test_group"

  - endpoint: /security/users
    method: post
    parameters: {}
    body:
      username: "new_test_user"
      password: "Password1!"

  - endpoint: /security/roles
    method: post
    parameters: {}
    body:
      name: "new_test_role"

  - endpoint: /security/policies
    method: post
    parameters: {}
    body:
      name: "new_test_policy"
      policy:
        actions:
          - "agent:read"
        resources:
          - "agent:id:99"
        effect: "allow"

  - endpoint: /security/rules
    method: post
    parameters: {}
    body:
      name: "new_test_security_rule"
      rule:
        MATCH:
          name: "test"

  - endpoint: /agents/group
    method: put
    parameters:
      group_id: "new_test_group"
    body: {}
    restart: True

  - endpoint: /agents/group/new_test_group/restart
    method: put
    parameters: {}
    body: {}
    restart: True

  - endpoint: /agents/restart
    method: put
    parameters: {}
    body: {}
    restart: True

  - endpoint: /agents
    method: post
    parameters: {}
    body:
      name: "new_test_agent"
      ip: "any"

  - endpoint: /agents/insert
    method: post
    parameters: {}
    body:
      name: "new_test_agent_insert"
      ip: "any"

  - endpoint: /agents/insert/quick
    method: post
    parameters:
      agent_name: "new_test_agent_insert_quick"
    body: {}

  - endpoint: /agents
    method: get
    parameters: {}
    body: {}

  - endpoint: /agents/no_group
    method: get
    parameters: {}
    body: {}

  - endpoint: /agents/outdated
    method: get
    parameters: {}
    body: {}

  - endpoint: /decoders
    method: get
    parameters: {}
    body: {}

  - endpoint: /groups
    method: get
    parameters: {}
    body: {}

  - endpoint: /lists
    method: get
    parameters: {}
    body: {}

  - endpoint: /rules
    method: get
    parameters: {}
    body: {}

  - endpoint: /security/users
    method: get
    parameters: {}
    body: {}

  - endpoint: /security/roles
    method: get
    parameters: {}
    body: {}

  - endpoint: /security/policies
    method: get
    parameters: {}
    body: {}

  - endpoint: /security/rules
    method: get
    parameters: {}
    body: {}

  - endpoint: /groups
    method: delete
    parameters:
      groups_list: "all"
    body: {}

  - endpoint: /agents
    method: delete
    parameters:
      agents_list: "all"
      status: "all"
      older_than: "0s"
    body: {}

  - endpoint: /security/users
    method: delete
    parameters:
      user_ids: "all"
    body: {}

  - endpoint: /security/roles
    method: delete
    parameters:
      role_ids: "all"
    body: {}

  - endpoint: /security/policies
    method: delete
    parameters:
      policy_ids: "all"
    body: {}

  - endpoint: /security/rules
    method: delete
    parameters:
      rule_ids: "all"
    body: {}

  - endpoint: /manager/restart
    method: put
    parameters: {}
    body: {}
    restart: True

  - endpoint: /cluster/restart
    method: put
    parameters: {}
    body: {}
    restart: True
