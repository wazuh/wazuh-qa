- name: Install dependencies
  {% if ansible_os_family == 'Debian' %}
  apt:
    name:
      - "build-essential"
      - "libreadline-dev"
      - "libncursesw5-dev"
      - "libssl-dev"
      - "libsqlite3-dev"
      - "libgdbm-dev"
      - "libc6-dev"
      - "libbz2-dev"
      - "libffi-dev"
      - "zlib1g-dev"
    state: present
  {% endif %}
  {% if ansible_os_family == 'RedHat' %}
  yum:
    name:
      - "Development Tools"
      - "zlib-devel"
    state: present
  {% endif %}

- name: Download and extract Python {{ version }}
  get_url:
    url: "https://www.python.org/ftp/python/{{ version }}/Python-{{ version }}.tgz"
    dest: "/tmp/Python-{{ version }}.tgz"
    mode: 0755
  register: download_python

- name: Extract Python {{ version }}
  unarchive:
    src: "/tmp/Python-{{ version }}.tgz"
    dest: "/tmp"
    remote_src: yes
  when: download_python.changed

- name: Install Python {{ version }}
  shell: |
    cd /tmp/Python-{{ version }}
    ./configure --enable-optimizations
    make altinstall
  args:
    chdir: "/tmp/Python-{{ version }}"
  when: download_python.changed
  register: install_python

- name: Set default python to {{ version }}
  shell: |
    update-alternatives --install /usr/local/bin/python3 python3 /usr/bin/python{{ version }} 1
    update-alternatives --install /usr/local/bin/pip3 pip3 /usr/bin/pip{{ version }} 1
  when: install_python.changed